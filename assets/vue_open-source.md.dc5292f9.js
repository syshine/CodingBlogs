import{_ as a,o as e,c as s,O as l}from"./chunks/framework.08728be1.js";const C=JSON.parse('{"title":"开源项目","description":"","frontmatter":{},"headers":[],"relativePath":"vue/open-source.md","filePath":"vue/open-source.md","lastUpdated":1690342715000}'),n={name:"vue/open-source.md"},o=l('<h1 id="开源项目" tabindex="-1">开源项目 <a class="header-anchor" href="#开源项目" aria-label="Permalink to &quot;开源项目&quot;">​</a></h1><h2 id="element-plus" tabindex="-1">element-plus <a class="header-anchor" href="#element-plus" aria-label="Permalink to &quot;element-plus&quot;">​</a></h2><p>源码地址: <a href="https://github.com/element-plus/element-plus" target="_blank" rel="noreferrer">https://github.com/element-plus/element-plus</a></p><ul><li>Vue 3 Composition API</li><li>fire Written in TypeScript</li></ul><h2 id="bilibili-vue" tabindex="-1">bilibili-vue <a class="header-anchor" href="#bilibili-vue" aria-label="Permalink to &quot;bilibili-vue&quot;">​</a></h2><p>预览地址： <a href="http://www.lybenson.com/bilibili/" target="_blank" rel="noreferrer">http://www.lybenson.com/bilibili/</a></p><h3 id="技术栈" tabindex="-1">技术栈 <a class="header-anchor" href="#技术栈" aria-label="Permalink to &quot;技术栈&quot;">​</a></h3><p>前端：vue3 + vuex + vite + stylus + nginx</p><p>后端：koa2</p><h3 id="项目运行" tabindex="-1">项目运行 <a class="header-anchor" href="#项目运行" aria-label="Permalink to &quot;项目运行&quot;">​</a></h3><p>源码地址: <a href="https://github.com/lybenson/bilibili-vue" target="_blank" rel="noreferrer">https://github.com/lybenson/bilibili-vue</a> 如何运行 运行前请先安装nodejs</p><p>clone项目到本地</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">git</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">clone</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://github.com/lybenson/bilibili-vue.git</span></span></code></pre></div><p>前端运行</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bilibili-vue</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span></code></pre></div><p>后端运行</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">bilibili-vue/bilibili-api</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">install</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">dev</span></span></code></pre></div><p>为了确保运行正确，请先运行后端服务。再运行前端，之后访问 <code>http://localhost:8080</code></p>',18),t=[o];function p(i,r,c,h,b,u){return e(),s("div",null,t)}const y=a(n,[["render",p]]);export{C as __pageData,y as default};
