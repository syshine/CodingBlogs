import{_ as s,o as a,c as l,O as n}from"./chunks/framework.08728be1.js";const D=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"linux/docker/springboot.md","filePath":"linux/docker/springboot.md","lastUpdated":1700194465000}'),o={name:"linux/docker/springboot.md"},p=n(`<h2 id="实例" tabindex="-1">实例 <a class="header-anchor" href="#实例" aria-label="Permalink to &quot;实例&quot;">​</a></h2><h3 id="dockerfile制作jdk17镜像-centos7" tabindex="-1">Dockerfile制作jdk17镜像(Centos7) <a class="header-anchor" href="#dockerfile制作jdk17镜像-centos7" aria-label="Permalink to &quot;Dockerfile制作jdk17镜像(Centos7)&quot;">​</a></h3><p><a href="https://blog.csdn.net/liu20121787/article/details/129698907" target="_blank" rel="noreferrer">参考网页</a></p><ol><li>创建目录并下载jdk17</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">mkdir</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/dockerjdk17</span></span>
<span class="line"><span style="color:#82AAFF;">cd</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/usr/local/dockerjdk17</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">wget</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz</span></span></code></pre></div><ol start="2"><li>创建 Dockerfile 文件 vi Dockerfile （内容如下：）</li></ol><div class="language-dockerfile"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> centos:7</span></span>
<span class="line"><span style="color:#F78C6C;">LABEL</span><span style="color:#A6ACCD;"> org.opencontainers.image.authors=</span><span style="color:#C3E88D;">&quot;syshine&quot;</span></span>
<span class="line"><span style="color:#F78C6C;">WORKDIR</span><span style="color:#A6ACCD;"> /usr/local/java</span></span>
<span class="line"><span style="color:#F78C6C;">ADD</span><span style="color:#A6ACCD;"> jdk-17_linux-x64_bin.tar.gz /usr/local/java/</span></span>
<span class="line"><span style="color:#F78C6C;">ENV</span><span style="color:#A6ACCD;"> JAVA_HOME=/usr/local/java/jdk-17.0.8</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># ENV JAVA_HOME=/usr/java/jdk-17</span></span>
<span class="line"><span style="color:#F78C6C;">ENV</span><span style="color:#A6ACCD;"> CLASSPATH=.:$JAVA_HOME/lib/jrt-fs.jar</span></span>
<span class="line"><span style="color:#F78C6C;">ENV</span><span style="color:#A6ACCD;"> PATH=$PATH:$JAVA_HOME/bin</span></span></code></pre></div><ol start="3"><li>构建镜像(注意后面有点，表示当前目录)</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">jdk17</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span></span></code></pre></div><ol start="4"><li>创建容器</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-di</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jdk17</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jdk17</span></span></code></pre></div><ol start="5"><li>进入容器</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">exec</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-it</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">容器ID</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">/bin/bash</span></span></code></pre></div><ol start="6"><li>查看版本</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">java</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-version</span></span></code></pre></div><h3 id="docker-快速部署springboot项目" tabindex="-1">Docker 快速部署Springboot项目 <a class="header-anchor" href="#docker-快速部署springboot项目" aria-label="Permalink to &quot;Docker 快速部署Springboot项目&quot;">​</a></h3><p><a href="https://blog.csdn.net/BThinker/article/details/125515096" target="_blank" rel="noreferrer">参考网页</a></p><ol><li><p>项目准备</p></li><li><p>编写Dockerfile文件 文件中jdk17是上一步制作的jdk17镜像名称</p></li></ol><div class="language-dockerfile"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># Docker image for springboot file run</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># VERSION 0.0.1</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># Author: </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 基础镜像使用java</span></span>
<span class="line"><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> jdk17</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 作者</span></span>
<span class="line"><span style="color:#F78C6C;">LABEL</span><span style="color:#A6ACCD;"> org.opencontainers.image.authors=</span><span style="color:#C3E88D;">&quot;syshine&quot;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># VOLUME 指定了临时文件目录为/tmp。</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 其效果是在主机 /var/lib/docker 目录下创建了一个临时文件，并链接到容器的/tmp</span></span>
<span class="line"><span style="color:#F78C6C;">VOLUME</span><span style="color:#A6ACCD;"> /tmp </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 将jar包添加到容器中并更名为xx.jar</span></span>
<span class="line"><span style="color:#F78C6C;">ADD</span><span style="color:#A6ACCD;"> docker-0.0.1-SNAPSHOT.jar /demo-docker.jar </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 改这个文件的访问时间和修改时间为当前时间</span></span>
<span class="line"><span style="color:#F78C6C;">RUN</span><span style="color:#A6ACCD;"> bash -c </span><span style="color:#C3E88D;">&#39;touch /demo-docker.jar&#39;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 用于运行程序，类似于 CMD 指令，但其不会被 docker run 的命令行参数指定的指令所覆盖，而且这些命令行参数会被当作参数送给 ENTRYPOINT 指令指定的程序。</span></span>
<span class="line"><span style="color:#F78C6C;">ENTRYPOINT</span><span style="color:#A6ACCD;"> [</span><span style="color:#C3E88D;">&quot;java&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;-jar&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#C3E88D;">&quot;/demo-docker.jar&quot;</span><span style="color:#A6ACCD;">]</span></span></code></pre></div><p>将jar包和Dockerfile文件放在上传到同一空目录下</p><ol start="3"><li>执行镜像打包 进入第2步的目录执行</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">build</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">./Dockerfile.dockerfile</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">.</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-t</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">demo-docker:v1.0</span></span></code></pre></div><p>查看镜像</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">images</span></span></code></pre></div><ol start="4"><li>启动容器</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># -d参数是让容器后台运行</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 16913为部署后实际代理端口,6913为程序的端口</span></span>
<span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">run</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-d</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-p</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">16913</span><span style="color:#C3E88D;">:6913</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--name</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">demo-docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">demo-docker:v1.0</span></span></code></pre></div><ol start="5"><li><p>测试结果 访问网址： localhost:16913/docker/hello</p></li><li><p>动态查看日志</p></li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">sudo</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">docker</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">logs</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">-f</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">--tail=100</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">demo-docker</span></span></code></pre></div>`,28),e=[p];function t(c,r,i,C,y,d){return a(),l("div",null,e)}const h=s(o,[["render",t]]);export{D as __pageData,h as default};
