import{_ as s,o as n,c as a,O as l}from"./chunks/framework.08728be1.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"ide/vscode/snippets.md","filePath":"ide/vscode/snippets.md","lastUpdated":1700194465000}'),o={name:"ide/vscode/snippets.md"},p=l(`<p><a href="https://blog.csdn.net/qq_33463449/article/details/103928634" target="_blank" rel="noreferrer">简单使用</a><a href="https://snippet-generator.app/" target="_blank" rel="noreferrer">生成代码块的工具网站</a></p><ol><li>打开书写代码块的工作区间（两种方法）</li></ol><ul><li>点击Code-首选项-用户代码片段</li><li>点击管理(左下角小齿轮)-用户代码片段</li></ul><ol start="2"><li>选择代码块作用域的文件类型</li></ol><ul><li><p>类型一：全局作用域 这种类型的代码块是创建在vscode软件内部的文件。是跟随这当前安装的vscode这个软件的，不会随着项目的关闭而失效，会一直存在。</p></li><li><p>类型二：文件夹作用域 这种类型的代码块是创建在某个文件下.vscode这个隐藏文件夹中的，这个代码块只适用于当前文件夹，出了这个文件夹就不能使用这个代码块了</p></li><li><p>类型三：特定文件类型作用域 这种类型的代码块跟全局作用域的文件路径是一致的，都是创建在了vscode中，会一直存在。但是这种代码块只适合于你指定的文件类型。比如：如果你创建的是JavaScript类型，那这个代码块就不能再vue文件中使用。 注意三种类型的代码块书写规范都是一致的</p></li></ul><ol start="3"><li>代码块的书写 我们选择一种类型（我这里选择全局作用域类型），并且给这个文件起一个名字</li></ol><div class="language-json"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C792EA;">新建vue3文件内容</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">scope</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">vue</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">       </span><span style="color:#676E95;font-style:italic;">// 限定vue文件类型</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">prefix</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">newVue3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">// 触发代码块的字符串</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">body</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;template&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">  &lt;div&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">    \${2:我是默认的}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">  &lt;/div&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;/template&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;script lang=</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">ts</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;"> setup&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">import { ref } from &#39;vue&#39;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">\${1}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;/script&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;style scoped lang=</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">scss</span><span style="color:#A6ACCD;">\\&quot;</span><span style="color:#C3E88D;">&gt;</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;/style&gt;</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">],</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&quot;</span><span style="color:#FFCB6B;">description</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">新建vue3文件内容</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p>所有的代码段都必须写在最外层大括号中，每个代码块之间用逗号隔开，一个代码块就类似一个对象。上方代码就是简单写了两个代码块。 接下来介绍每个属性的作用及方法。 <code>scope</code>：作用文件类型。就是代码块的作用文件类型，这里我们可以指定文件类型，多种类型之间用逗号隔开，比如如果指定作用范围类型&quot;css, javascript&quot; 那么这个代码块只能在这两种类型的文件中起作用。如果值为空，或者是不写这个属性，默认所有类型文件都支持改代码块。在特定文件类型中这个值是不起作用的，写了会报错，因为这种类型已经本身已经限制了文件类型 <code>prefix</code>： 触发代码块的字符串。写代码的时候我们只需敲出这个字符串就会触发我们的代码块。 <code>body</code>：代码块的主体内容。我们需要把我们的代码书写在这个属性中。仔细观察我们可以看出，代码块主体就是字符串的数组。 <code>description</code>：代码块的简单介绍，我们可以介绍一下这段代码块是干什么用的 代码主体的书写规范：</p><ul><li>每个字符串元素就代表一行，行与行之间用 , (逗号)隔开表示换行。或者使用\\n换行</li><li>行内不能使用tab键缩进，只能使用空格或者\\t缩进</li><li>$1使用代码块敲击回车(实测回车不行)或者tab键后光标定位的位置。$2 $3 $4...表示我们按下tab光标依次出现的位置(用\${1} \${2}这种也可以)。用\${2}这种形式还可以设定默认值，如上代码的<code>\${2:我是默认的}</code>，按tab键定位到该位置时会自动选上该字符串，直接修改即可，非常方便。</li></ul><ol start="4"><li><p>代码块的使用 只需在想要书写的位置敲出触发我们代码块的关键字就行</p></li><li><p>代码块的编辑与删除 编辑：如果我们想要编辑我们的代码块，我们就需要找到这个文件，然后才能编辑代码块内容。我们如何找到这个文件呢，步骤如同第一步</p></li></ol><p>删除：如果不想使用某个代码块，我们只需找到这个代码块的书写位置，然后把它删掉就好了。但是我们如何删除代码块文件呢。首先我们需要找到的路径。</p><p>注意：全局类型和特定文件类型的代码块文件都是保存在这个路径下的，文件夹代码块文件是保存在.vscode中的（第四步提到过）</p>`,12),t=[p];function e(c,D,r,F,y,i){return n(),a("div",null,t)}const A=s(o,[["render",e]]);export{u as __pageData,A as default};
